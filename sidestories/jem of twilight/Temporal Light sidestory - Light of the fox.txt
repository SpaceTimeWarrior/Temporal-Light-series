Temporal Light side stories
Name:Light of the fox
Timeframe:2 days after crystal's cookie
Starting location: Luna
flare is talking to pearlite on a video call

Flare: hello, what do you need

pearlite: can I look after crystal for a few days. I would like to have my grand daughter around. I also would like to do the magic power test that jem scheduled before she got severely hurt...how is she.

flare: she is stable now, thankfully but this did put her in a coma. if what the doctor told me is true it is because her magic organs need to reset as they were overcharged. I didn't even think that was a possibility. as for crystal at the moment (thought: bright is looking after her but could this be a perfect time to get back at him for my first Halloween with jem). sure, but I am going to have your knight cay to do something for me. 

pearlite:?...what might it be?

flare: I am going to need her to take crystal out then in her night form pretend to be her. then you arrive to pick her up this is to prank a friend.

pearlite:...(she then does a weird grin) that sounds fine. is by chance the friend is bright?

flare: yes...why? (internal thaughts: what has he done now...if it wasn't for the fact he hit upon my wife at Halloween I probably wouldn't of believed it but now I can believe anything)

pearlite: payback for embarrassing me on valentines day when jem was pregnant.

flare: wait thet was you...I am so sorry for recommending shaving off your fur I didn't know it was you.

pearlite: no offence taken if anything jem would have more blame that day than you. I forgave her because she was going through pregnancy and magic does amplify their personality and remove their mental inhibitions.

flare: I will send you the blueprints so you can plan your route. I am going to visit jem.

(12 hours later flare is sending a message to bright)

flare: pearlite is coming to pick up crystal in a few minutes.

bright: I guess I should check on crystal. she should be sleeping.

bright looks inside crystal's room, everything looks fine but instead of crystal he sees a fox

bright: S#$%...doesn't jem have an alternate night form could this be hers......wait her appearance is more human like not less.

ding dong

bright: coming

pearlite is at the front door

bright comes close then thinks "what if this is flare...he would be furious I lost his child"

bright waits a few more seconds and is interrupted by the doorbell going off again.

bright: I guess I have to face the music.

bright opens the door to find pearlite

bright (internally: maybe I can pin the blame on pearlite): hi did flare send you.

pearlite: yes, he wanted me to take crystal for a few days... you do have her don't you as flare told me you were taking care of her.

bright(lying): sure this way. she is asleep at the moment. I do have a question on night forms what is yours as right before you arrived crystal transformed into a brown fox.

pearlite: I have a fox as my night form...sounds like she might be around the age she would get one. it is different for each person but generally around being a toddler to puberty it rarely happens after. mind if I come look (I would of thought it would be like jem not like me. I am not complaining though)

both pearlite and bright walk over to crystal's room

pearlite: let's sneak in these forms are very susceptible to light we need to keep it low. I will wake crystal up.

bright: arn't you going to transform.

pearlite: who do you think made jem's enchanted dress that prevents the transformation.

bright: oh. 

pearlite: why I am doing this instead of reversing it is sometimes you have to get re-used to walking in that form. and get used to the new limits as in my night form only kitsunes and foxes can understand what I am saying.

bright: ok. let’s go inside.

(both of them enter)

pearlite: crystal wake up.(crystal? wakes up) it looks like you finally got your night form. Can you walk towards me. You will have to walk on all fours.

crystal?: what tha? wha hapun to my hands? (bright only heard squeeks)

pearlite: it looks like you inherited my night form. when the light around you becomes low you will transform into a fox.

(bright walks close to crystal?)

bright: are you feeling ok

(crystal? bites bright's left hand)

bright: crystal bad please don't bite me again.

pearlite: it is natural, the transformation also enhances their animal instincts. they might not of meant to do it.

crystal? gets up (she is much smaller than her dress so she walks out of her dress through the neck hole jumps down and pees on bright).

bright: really I know jem and flare potty trained you.

pearlite: maybe in this form we have to redo the potty training. that occasionally happened. but it could be she is marking you as her's.

bright: if that is the case pee all over me?

pearlite: are you sure you want to do that? crystal come here. (pearlite crouches down being careful not to stain her dress with the pee)

crystal?: grandma do you like what I did.

pearlite (using mind magic. bright cannot hear): cay you don't have to talk like crystal bright can't understand what you are saying.

crystal? (using mind magic. bright cannot hear): I know but isn't the whole idea is to prank bright.

pearlite (using mind magic. bright cannot hear): remember I have to explain and translate for you. and if you start doing sexual acts it would be hard to explain it.

pearlite: crystal grandma is here (while petting crystal?'s head)

crystal?: why ca't bright undrsand me? did I do somtin wrong.

pearlite: crystal your new form automatically translates your speech into that of a fox. it would be like a animal started talking to him. I will translate your speech. do you want me to pick you up?

crystal?:no I wan bite to.

pearlite: i think she wants you to pick you up as she said bite instead of bright. if you do pick up by the sides like a dog. above all else please do not pull by the tail that is quite painful.

bright: why is it painful?(as he is picking up and holding crystal? in his left arm and petting her with his right)

pearlite: it has nearly the same sensitivity as our private parts and would be like yanking your crotch but instead of pain there it is on the lower back.

bright: oh, then jem must of been rude to the fox jem grabbed when she was pregnant...wait was that you

pearlite: I refuse to say. but yes that might of been rude.

bright(realizes he may of embarissed pearlite by accident): oh if it was you I am sorry for grabbing garnet's attention I didn't know. 

flare opens the door and a pile of smoke appears around crystal? and large nude female kitsune(cay neigh) appears where crystal was and the extra weight pushes bright backwards and lands completely in the pee.

cay: pearlite I am going to get changed(while covering her boobs)

flare: what did I miss

pearlite: bright being a complete idiot.

flare: bright go clean yourself up I expect a full report on your babysitting.

bright(still in the pee): what just happened.

flare and pearlite leave the room
bright and cay is still in the room but cay is out of sight

bright: wait you are not crystal. what did you do with her

cay: she is on her way to eather.

bright: you look beautiful... would you like to...

cay: I guess I have time.

meanwhile.
flare, pearlite and crystal is in the same room
pearlite: that was fun I think bright won't embaras me much more.

flare: good do you want to share.

pearlite: well bright ended up in a puddle of pee. I will let bright tell you in his report. I am going to take crystal for a few days.

flare: ok. crys please be good to grandma. and pearlite if the test ends up hurting her please stop.

pearlite: ok, come on crystal come with me.

epilog: 
pearlite and crystal managed to safely make it to Eather.
cay was a few minutes late but did have a odd scent afterword
and flare went back to visit jem.